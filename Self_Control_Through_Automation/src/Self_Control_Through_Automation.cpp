/* 
 * Project Self_Control_Through_Automation
 * Author: Benjamin Brown
 * Date: 06282025
 * For comprehensive documentation and examples, please visit:
 * https://docs.particle.io/firmware/best-practices/firmware-template/
 */


#include "Particle.h"
#include "IoTTimer.h"
#include "wemo.h"
#include "Button.h"
#include "IoTClassroom_CNM.h"
#include "Adafruit_GFX.h"
#include "Adafruit_SSD1306.h"

//Bit_Maps
#define DNTU1R_BMPWIDTH  128 // m&m Splash Screen
#define DNTU1R_BMPHEIGHT 64 
const unsigned char bitmap_dntu1r[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x00,0x04,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x80,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xE0,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0x3F,0xFF,0xF0,0xC0,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xF8,0xC0,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xE7,0xFF,0xFF,0xFF,0xF9,0xC0,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x19,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0x07,0xE0,
  0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x09,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0x1F,0xF0,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0xFF,0xFF,0xFF,0xFC,0x1F,0xFC,0x1C,0x70,
  0x00,0x00,0x00,0x00,0x03,0xFF,0x00,0x08,0xFF,0xFF,0xFF,0xF8,0x0F,0xFC,0x38,0x30,
  0x00,0x00,0x00,0x00,0x1F,0xFF,0x80,0x08,0xFF,0xFC,0x1F,0xF8,0x0F,0xFC,0x3C,0x00,
  0x00,0x00,0x01,0xFC,0xFF,0xFF,0xC0,0x08,0xFF,0xF8,0x1F,0xF8,0x0F,0xFC,0x3F,0xE0,
  0x00,0x00,0x0F,0xFF,0xFF,0xFF,0xE0,0x08,0x7F,0xF0,0x0F,0xF8,0x0F,0xFC,0x1F,0xF0,
  0x20,0x1F,0x9F,0xFF,0xFF,0xFF,0xE0,0x00,0x1F,0xF8,0x0F,0xF8,0x07,0xFC,0x03,0xF8,
  0x67,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x1F,0xF8,0x0F,0xFC,0x07,0xFC,0x00,0x38,
  0x23,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x3E,0x1F,0xF8,0x0F,0xFC,0x07,0xFE,0x1C,0x38,
  0x23,0xFF,0xFF,0xFF,0xF0,0x7F,0xF0,0xFF,0x1F,0xF8,0x0F,0xFC,0x07,0xFE,0x1E,0xF2,
  0x23,0xFF,0xFF,0xFF,0xE0,0x3F,0xF0,0xE7,0x9F,0xF8,0x0F,0xFC,0x07,0xFE,0x1F,0xE0,
  0x23,0xFF,0xF0,0x7F,0xE0,0x3F,0xF1,0xC3,0x8F,0xF8,0x0F,0xFC,0x07,0xFE,0x0C,0x00,
  0x23,0xFF,0xE0,0x7F,0xE0,0x3F,0xF1,0xE3,0x8F,0xF8,0x07,0xFC,0x07,0xFE,0x00,0x08,
  0x21,0xFF,0xE0,0x3F,0xE0,0x1F,0xF1,0xFF,0x8F,0xFC,0x07,0xFC,0x03,0xFE,0x00,0x30,
  0x30,0x7F,0xE0,0x3F,0xF0,0x1F,0xF0,0xFF,0x01,0xFC,0x07,0xFC,0x03,0xFE,0x0F,0xC0,
  0x10,0x7F,0xE0,0x3F,0xF0,0x1F,0xF0,0x7E,0x1D,0xFC,0x07,0xFE,0x03,0xFE,0x18,0x00,
  0x1C,0x7F,0xE0,0x3F,0xF0,0x1F,0xF8,0xFE,0x3C,0xFC,0x07,0xFE,0x03,0xFF,0x00,0x00,
  0x0E,0x7F,0xE0,0x3F,0xF0,0x1F,0xF9,0xFF,0xFC,0xFC,0x07,0xFE,0x03,0xFF,0x00,0x00,
  0x06,0x3F,0xE0,0x3F,0xF0,0x1F,0xF9,0xE7,0xF8,0xFC,0x07,0xFE,0x03,0xFF,0x80,0x00,
  0x02,0x3F,0xE0,0x1F,0xF0,0x1F,0xFB,0xC3,0xF0,0xFC,0x03,0xFE,0x03,0xFF,0xC0,0x00,
  0x02,0x3F,0xE0,0x1F,0xF0,0x0F,0xFB,0xC1,0xFE,0xFC,0x03,0xFF,0x01,0xFF,0xC0,0x00,
  0x02,0x3F,0xF0,0x1F,0xF0,0x0F,0xFB,0xE7,0xFE,0xFE,0x03,0xFF,0xC1,0xFF,0xC0,0x00,
  0x02,0x3F,0xF0,0x1F,0xF8,0x0F,0xF9,0xFF,0xFE,0xFE,0x03,0xFF,0xC1,0xFF,0xE0,0x00,
  0x02,0x3F,0xF0,0x1F,0xF8,0x0F,0xFC,0xFF,0x00,0xFF,0x83,0xFF,0xC1,0xFF,0xE0,0x00,
  0x03,0x3F,0xF0,0x1F,0xF8,0x0F,0xFC,0x00,0x07,0xFF,0x83,0xFF,0xC1,0xFF,0x80,0x00,
  0x01,0x3F,0xF0,0x1F,0xF8,0x0F,0xFC,0x00,0x0F,0xFF,0x83,0xFF,0xC1,0xC0,0x00,0x00,
  0x01,0x1F,0xF0,0x1F,0xF8,0x0F,0xFE,0x00,0x1F,0xFF,0xC3,0xFF,0xC0,0x00,0x00,0x00,
  0x01,0x1F,0xF0,0x0F,0xF8,0x0F,0xFF,0x1F,0x8F,0xFF,0xC1,0xE0,0x00,0x01,0xF0,0x00,
  0x01,0x1F,0xF8,0x0F,0xFC,0x07,0xFF,0x18,0x8F,0xFF,0xC0,0x00,0x00,0xFF,0x80,0x00,
  0x01,0x1F,0xF8,0x0F,0xFF,0x07,0xFF,0x80,0x8F,0xF0,0x00,0x00,0xFF,0xC0,0x00,0x00,
  0x01,0x1F,0xF8,0x0F,0xFF,0x07,0xFF,0x80,0x88,0x00,0x00,0x7F,0xC0,0x00,0x00,0x00,
  0x01,0x1F,0xFE,0x0F,0xFF,0x07,0xFF,0x80,0x80,0x00,0x7F,0xE0,0x00,0x00,0x00,0x00,
  0x00,0x1F,0xFE,0x0F,0xFF,0x07,0xFC,0x00,0xC0,0x3F,0xF0,0x00,0x00,0x00,0x00,0x00,
  0x00,0x3F,0xFE,0x0F,0xFF,0x06,0x00,0x00,0xDF,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,
  0x02,0x3F,0xFF,0x07,0xFF,0x00,0x00,0x10,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x02,0x3F,0xFF,0x07,0x00,0x00,0x0F,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x02,0x3F,0xFF,0x00,0x00,0x07,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x02,0x3F,0xC0,0x00,0x03,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x02,0x00,0x00,0x03,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x02,0x00,0x01,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x03,0x00,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x01,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x01,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

#define UVOY98_BMPWIDTH  54 // m&m dispense face (green)
#define UVOY98_BMPHEIGHT  64
const unsigned char bitmap_uvoy98[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x30,0x18,0x00,0x00,0x00,
  0x00,0x00,0x78,0x1C,0x00,0x00,0x00,
  0x00,0x01,0xF8,0x1F,0x00,0x00,0x00,
  0x00,0x07,0xF8,0x3F,0xC0,0x00,0x00,
  0x00,0x1F,0xF0,0x1F,0xF0,0x00,0x00,
  0x00,0x7F,0xF0,0x1F,0xFC,0x00,0x00,
  0x00,0xFF,0xE0,0x0F,0xFE,0x00,0x00,
  0x00,0xFF,0x80,0x03,0xFF,0x00,0x00,
  0x01,0xFE,0x00,0x00,0xFF,0x00,0x00,
  0x01,0xF8,0x00,0x00,0x3F,0x00,0x00,
  0x03,0xE0,0x00,0x00,0x0F,0x80,0x00,
  0x03,0xC0,0x00,0x00,0x07,0x80,0x00,
  0x03,0x80,0x00,0x00,0x03,0x80,0x00,
  0x03,0x00,0x00,0x00,0x01,0x80,0x00,
  0x03,0x00,0x00,0x00,0x01,0x80,0x00,
  0x00,0x03,0x80,0x00,0x00,0x00,0x00,
  0x00,0x3F,0xF0,0x07,0xFC,0x00,0x00,
  0x00,0x70,0x38,0x0E,0x0F,0x00,0x00,
  0x00,0xC0,0x0C,0x18,0x03,0x80,0x00,
  0x01,0x80,0x06,0x30,0x00,0xC0,0x00,
  0x03,0x00,0x06,0x60,0x00,0x60,0x00,
  0x06,0x00,0x03,0x60,0x00,0x30,0x00,
  0x06,0x00,0x01,0xC0,0x00,0x30,0x00,
  0x0C,0x00,0x01,0xC0,0x00,0x18,0x00,
  0x0C,0x00,0x01,0xC0,0x00,0x18,0x00,
  0x18,0x01,0xFF,0xF0,0x00,0x08,0x00,
  0x1F,0xFF,0xFF,0xFF,0xFF,0xFC,0x00,
  0x7F,0x00,0x00,0x80,0x07,0xFF,0x00,
  0xC0,0x00,0x00,0x80,0x00,0x03,0x00,
  0xC0,0x00,0x01,0xC0,0x00,0x01,0x00,
  0xC3,0xFF,0xFF,0xFF,0xFF,0xC3,0x00,
  0x7F,0xEF,0xF1,0xC6,0xFF,0xFF,0x00,
  0x30,0xCF,0xF1,0xC6,0x7F,0x0C,0x00,
  0x10,0x4F,0xE1,0xC6,0x7F,0x04,0x00,
  0x18,0x6F,0xE3,0x66,0xFF,0x0C,0x00,
  0x18,0x7F,0xC2,0x63,0xFE,0x0C,0x00,
  0x08,0x3F,0x86,0x33,0xFC,0x08,0x00,
  0x0C,0x0E,0x0C,0x30,0xF0,0x18,0x00,
  0x04,0x00,0x1C,0x18,0x00,0x30,0x00,
  0x06,0x00,0x38,0x0C,0x00,0x30,0x00,
  0x03,0x80,0x60,0x07,0x00,0xE0,0x00,
  0x01,0xE3,0xC0,0x03,0xC3,0x80,0x00,
  0x00,0x7F,0x00,0x00,0xFF,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x60,
  0x00,0x00,0x00,0x00,0x00,0x00,0x7C,
  0x00,0x00,0x00,0x00,0x00,0x00,0x38,
  0x00,0x00,0x00,0x00,0x00,0x00,0x30,
  0x00,0x00,0x00,0x00,0x00,0x00,0x30,
  0x00,0x00,0x00,0x00,0x00,0x00,0x60,
  0x00,0x00,0x00,0x00,0x00,0x00,0x60,
  0x00,0x00,0x00,0x00,0x00,0x00,0xC0,
  0x10,0x00,0x00,0x00,0x00,0x03,0x80,
  0x1C,0x00,0x00,0x00,0x07,0xFF,0x00,
  0x0E,0x00,0x00,0x03,0xFF,0xE0,0x00,
  0x03,0xE0,0x01,0xFF,0xC0,0x00,0x00,
  0x00,0xFF,0xFF,0xE0,0x00,0x00,0x00,
  0x00,0x07,0xF0,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x7F,0x00,0x00,
  0x00,0x00,0x00,0x0F,0xFF,0x80,0x00,
  0x00,0x00,0x7F,0xFE,0x00,0x00,0x00,
  0x00,0x00,0x7F,0xC0,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

#define UQQXMF_BMPWIDTH  128 // m&m sus face (yellow)
#define UQQXMF_BMPHEIGHT  64
const unsigned char bitmap_uqqxmf[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xFF,0xE0,0x00,0x00,0x00,0x00,0x1F,0xFF,0xFE,0x00,0x00,0x00,
  0x00,0x00,0x00,0x07,0xFF,0xFE,0x00,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xC0,0x00,0x00,
  0x00,0x00,0x00,0x3F,0xFF,0xFF,0xC0,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0xF0,0x00,0x00,
  0x00,0x00,0x00,0xFF,0xFF,0xFF,0xF8,0x00,0x00,0x7F,0xFF,0xFF,0xFF,0xFC,0x00,0x00,
  0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFE,0x00,0x01,0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x00,
  0x00,0x00,0x07,0xFF,0xFF,0xFF,0xFF,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,
  0x00,0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xC0,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x00,
  0x00,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xC0,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0x00,
  0x00,0x00,0x3F,0xFF,0xFF,0xFF,0xFF,0xE0,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,
  0x00,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,0xF0,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,
  0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x1F,0xFF,0xFF,0x80,0x1F,0xFF,0xF0,0x00,
  0x00,0x01,0xFF,0xF8,0x00,0x03,0xFF,0xF0,0x0F,0xFF,0xC0,0x00,0x00,0x7F,0xF0,0x00,
  0x00,0x01,0xFF,0x80,0x00,0x00,0x3F,0xF0,0x03,0xF8,0x00,0x00,0x00,0x0F,0xF8,0x00,
  0x00,0x03,0xFC,0x00,0x00,0x00,0x07,0xE0,0x00,0x00,0x00,0x00,0x00,0x01,0xF8,0x00,
  0x00,0x03,0xE0,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x0F,0x00,0x00,0x00,0x78,0x00,
  0x00,0x07,0x80,0x00,0x18,0x00,0xC0,0x00,0x00,0x01,0x80,0x18,0x00,0x00,0x38,0x00,
  0x00,0x06,0x00,0x00,0xC0,0x00,0x10,0x00,0x00,0x04,0x00,0x01,0x00,0x00,0x0C,0x00,
  0x00,0x0C,0x00,0x02,0x00,0x00,0x04,0x00,0x00,0x10,0x00,0x00,0x40,0x00,0x04,0x00,
  0x00,0x00,0x00,0x0C,0x00,0x00,0x02,0x00,0x00,0x20,0x00,0x00,0x10,0x00,0x00,0x00,
  0x00,0x00,0x00,0x10,0x00,0x00,0x01,0x00,0x00,0x80,0x00,0x00,0x04,0x00,0x00,0x00,
  0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x80,0x00,0x80,0x00,0x00,0x02,0x00,0x00,0x00,
  0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x40,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
  0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x40,0x02,0x00,0x00,0x00,0x00,0x80,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x02,0x00,0x00,0x00,0x00,0x40,0x00,0x00,
  0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x20,0x02,0x00,0x00,0x00,0x00,0x20,0x00,0x00,
  0x00,0x00,0x04,0x00,0x00,0x03,0xF0,0x20,0x04,0x07,0xC0,0x00,0x00,0x10,0x00,0x00,
  0x00,0x00,0x00,0x00,0x01,0xC0,0x1F,0xE0,0x03,0xFC,0x01,0xC0,0x00,0x10,0x00,0x00,
  0x00,0x00,0x08,0x00,0x70,0x1C,0x38,0x20,0x02,0x0E,0x3C,0x07,0x00,0x08,0x00,0x00,
  0x00,0x00,0x00,0x0C,0x07,0x80,0x38,0x20,0x00,0x1E,0x01,0xF0,0x38,0x08,0x00,0x00,
  0x00,0x00,0x11,0x80,0xFF,0x80,0x3C,0x00,0x04,0x1E,0x01,0xFF,0x81,0x80,0x00,0x00,
  0x00,0x00,0x18,0x1F,0xFF,0xC0,0x7C,0x00,0x04,0x1E,0x01,0xFF,0xF8,0x1C,0x00,0x00,
  0x00,0x00,0x01,0x8F,0xFF,0xE0,0x7C,0x00,0x04,0x1F,0x03,0xFF,0xF0,0x84,0x00,0x00,
  0x00,0x00,0x1C,0x0F,0xFF,0xF9,0xFC,0x00,0x04,0x1F,0xCF,0xFF,0xF0,0x1C,0x00,0x00,
  0x00,0x00,0x08,0x07,0xFF,0xFF,0xFC,0x00,0x04,0x1F,0xFF,0xFF,0xF0,0x10,0x00,0x00,
  0x00,0x00,0x00,0x07,0xFF,0xFF,0xF8,0x20,0x00,0x1F,0xFF,0xFF,0xF0,0x10,0x00,0x00,
  0x00,0x00,0x04,0x07,0xFF,0xFF,0xF8,0x20,0x02,0x0F,0xFF,0xFF,0xE0,0x10,0x00,0x00,
  0x00,0x00,0x04,0x03,0xFF,0xFF,0xF0,0x20,0x02,0x07,0xFF,0xFF,0xE0,0x00,0x00,0x00,
  0x00,0x00,0x02,0x01,0xFF,0xFF,0xE0,0x40,0x00,0x07,0xFF,0xFF,0xC0,0x20,0x00,0x00,
  0x00,0x00,0x02,0x00,0xFF,0xFF,0xC0,0x40,0x01,0x01,0xFF,0xFF,0x80,0x00,0x00,0x00,
  0x00,0x00,0x01,0x00,0x7F,0xFF,0x80,0x80,0x00,0x80,0xFF,0xFE,0x00,0x40,0x00,0x00,
  0x00,0x00,0x00,0x80,0x0F,0xFE,0x01,0x00,0x00,0x00,0x3F,0xF8,0x00,0x80,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x40,0x00,0x00,0x01,0x00,0x00,0x00,
  0x00,0x00,0x00,0x20,0x00,0x00,0x04,0x00,0x00,0x20,0x00,0x00,0x02,0x00,0x00,0x00,
  0x00,0x00,0x00,0x10,0x00,0x00,0x08,0x00,0x00,0x08,0x00,0x00,0x04,0x00,0x00,0x00,
  0x00,0x00,0x00,0x0C,0x00,0x00,0x20,0x00,0x00,0x04,0x00,0x00,0x10,0x00,0x00,0x00,
  0x00,0x00,0x00,0x03,0x00,0x00,0xC0,0x00,0x00,0x01,0x00,0x00,0x40,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x60,0x06,0x00,0x00,0x00,0x00,0x20,0x03,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x03,0xC0,0x00,0x00,0x00,0x00,0x01,0xE0,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

#define BP2YZJ_BMPWIDTH  128 // dead eyes (red)
#define BP2YZJ_BMPHEIGHT 64  
const unsigned char bitmap_bp2yzj[] PROGMEM = {
  0x00,0x03,0xFC,0x00,0x03,0x00,0x00,0x00,0x00,0x04,0xC0,0x00,0x00,0xFF,0xC0,0x00,
  0x00,0x07,0xFC,0x00,0x02,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0xFF,0xE0,0x00,
  0x00,0x07,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x7F,0xE0,0x00,
  0x00,0x0F,0xF0,0x00,0x00,0x00,0x00,0x00,0x0B,0xE4,0x00,0x00,0x00,0x3F,0xF8,0x00,
  0x00,0x0F,0xF0,0x00,0x00,0x00,0x00,0x00,0x0F,0xE4,0x00,0x07,0x00,0x3F,0xF8,0x00,
  0x00,0x1F,0xE0,0x1F,0x80,0x00,0x00,0x00,0x0F,0xF4,0x00,0x1F,0x00,0x1F,0xF0,0x00,
  0x00,0x1F,0xC0,0x3F,0xC0,0x00,0x1C,0x00,0x0F,0xFC,0x00,0x3E,0x00,0x1F,0xF8,0x00,
  0x00,0x3F,0xC0,0x3F,0xE0,0x00,0x3C,0x00,0x0F,0xFC,0x00,0xFE,0x00,0x0F,0xFC,0x00,
  0x00,0x3F,0x80,0x3F,0xF0,0x00,0xFC,0x00,0x0F,0xFF,0x03,0xF8,0x00,0x07,0xFC,0x00,
  0x00,0x7F,0x80,0x3F,0xF8,0x03,0xF8,0x00,0x0F,0xFF,0x8F,0xF0,0x00,0x87,0xFC,0x00,
  0x00,0x7F,0x00,0x3F,0xFC,0x0F,0xE0,0x00,0x07,0xFF,0xFF,0xE0,0x00,0x07,0xFE,0x00,
  0x04,0xFF,0x00,0x1F,0xFE,0x3F,0xC0,0x00,0x07,0xFF,0xFF,0xC0,0x01,0x03,0xFE,0x00,
  0x00,0xFE,0x00,0x1F,0xFF,0xFF,0x80,0x00,0x05,0xFF,0xFF,0x80,0x01,0x83,0xFE,0x00,
  0x01,0xFE,0x00,0x0F,0xFF,0xFF,0x00,0x00,0x04,0x7F,0xFF,0x00,0x10,0x03,0xFF,0x00,
  0x03,0xFC,0x00,0x0B,0xFF,0xFF,0x00,0x00,0x00,0x3F,0xFE,0x00,0x00,0x03,0xFF,0x00,
  0x03,0xFC,0x00,0x01,0xFF,0xFC,0x00,0x00,0x00,0x1F,0xFE,0x00,0x00,0x01,0xFF,0x00,
  0x07,0xFC,0x00,0x00,0xFF,0xFC,0x00,0x00,0x00,0x0F,0xFF,0x00,0x00,0x03,0xFF,0x80,
  0x07,0xF8,0x00,0x00,0x3F,0xFC,0x00,0x00,0x00,0x1F,0xFF,0xC0,0x01,0x01,0xFF,0x80,
  0x0F,0xF8,0x00,0x00,0x3F,0xFE,0x00,0x00,0x00,0x1F,0xFF,0xE0,0x00,0x01,0xFF,0x88,
  0x0F,0xF8,0x00,0x00,0x3F,0xFF,0x00,0x00,0x00,0x3F,0xFF,0xF0,0x00,0x00,0xFF,0x80,
  0x0F,0xF0,0x00,0x00,0x7F,0xFF,0x80,0x00,0x00,0x7F,0xBF,0xF8,0x00,0x00,0xFF,0x80,
  0x0F,0xF8,0x01,0x00,0xFF,0xFF,0xC0,0x00,0x00,0xFF,0x1F,0xFC,0x00,0x00,0xFF,0xE0,
  0x0F,0xF0,0x01,0x01,0xFE,0xFF,0xE0,0x00,0x01,0xFF,0x07,0xFE,0x00,0x00,0x7F,0xE0,
  0x0F,0xF0,0x01,0x03,0xFE,0x3F,0xF8,0x00,0x01,0xFE,0x03,0xFF,0x80,0x00,0x7F,0xF0,
  0x1F,0xF0,0x01,0x07,0xFC,0x1F,0xFC,0x00,0x03,0xFC,0x01,0xFF,0x80,0x00,0x7F,0xF8,
  0x1F,0xF0,0x01,0x07,0xF8,0x0F,0xFE,0x00,0x07,0xF8,0x00,0xFF,0xC0,0x00,0x7F,0xF8,
  0x1F,0xE0,0x01,0x0F,0xF0,0x07,0xFF,0x00,0x07,0xF8,0x00,0x3F,0xC0,0x00,0x7F,0xF8,
  0x1F,0xE0,0x01,0x0F,0xF0,0x01,0xFF,0x00,0x07,0xF0,0x00,0x1F,0xC0,0x00,0x7F,0xFC,
  0x1F,0xE0,0x01,0x1F,0xF0,0x00,0xFF,0x80,0x03,0xF0,0x00,0x0F,0x80,0x00,0x3F,0xFC,
  0x1F,0xE0,0x01,0x0F,0xE0,0x00,0x7F,0x00,0x03,0xE0,0x00,0x00,0x00,0x00,0x3F,0xF8,
  0x9F,0xE0,0x00,0x0F,0xC0,0x00,0x1E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xF0,
  0x1F,0xE0,0x00,0x0F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xC0,
  0x1F,0xE0,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xC0,
  0x1F,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xC0,
  0x1F,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x80,0x00,0x3F,0xE0,
  0x0F,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xC0,0x00,0x3F,0xC0,
  0x07,0xE0,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xE0,0x00,0x3F,0xE0,
  0x07,0xF0,0x01,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xF0,0x00,0x7F,0xC0,
  0x07,0xF0,0x01,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xF0,0x00,0x7F,0xC0,
  0x03,0xF8,0x01,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xF0,0x00,0x7F,0xC0,
  0x03,0xFC,0x01,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xF0,0x00,0x7F,0x80,
  0x03,0xFC,0x01,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xF0,0x00,0x7F,0x80,
  0x03,0xFE,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xE0,0x00,0x7F,0x00,
  0x01,0xFE,0x01,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xE0,0x00,0xFF,0x00,
  0x01,0xFE,0x01,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xC0,0x00,0xFE,0x00,
  0x01,0xFF,0x01,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xC0,0x00,0xFE,0x00,
  0x01,0xFF,0x03,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xC0,0x01,0xFC,0x00,
  0x01,0xFF,0x83,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0x80,0x01,0xFC,0x00,
  0x00,0xFF,0x82,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0x80,0x01,0xF8,0x00,
  0x00,0xFF,0x86,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0x80,0x03,0xF8,0x00,
  0x00,0xFF,0x86,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xFF,0x80,0x03,0xF8,0x00,
  0x00,0x7F,0x86,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xFD,0x80,0x23,0xF8,0x00,
  0x00,0x7F,0xC0,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xFD,0x80,0x07,0xF0,0x00,
  0x00,0xFF,0x80,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFD,0x80,0x0F,0xF0,0x00,
  0x00,0x3F,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xF9,0x80,0x0F,0xE0,0x00,
  0x00,0x3F,0xC0,0x1F,0x80,0x00,0x00,0x00,0x00,0x00,0xFF,0xE9,0x80,0x1F,0xE0,0x00,
  0x00,0x3F,0xC0,0x1F,0xC0,0x00,0x00,0x00,0x00,0x01,0xFF,0xC9,0x80,0x1F,0xC0,0x00,
  0x00,0x3F,0xE0,0x0F,0xE0,0x00,0x00,0x00,0x00,0x03,0xFF,0xC1,0x80,0x3F,0x80,0x00,
  0x00,0x2F,0xF0,0x0F,0xE0,0x00,0x00,0x00,0x00,0x07,0xFF,0x81,0x00,0x7F,0x80,0x00,
  0x00,0x2F,0xF0,0x07,0xF0,0x00,0x00,0x00,0x00,0x1F,0xFF,0x01,0x00,0x7F,0x80,0x00,
  0x00,0x27,0xF8,0x03,0xF8,0x00,0x00,0x00,0x00,0x1F,0xFE,0x01,0x00,0xFF,0x00,0x00,
  0x00,0x27,0xF8,0x03,0xFE,0x00,0x00,0x00,0x00,0x3F,0xFC,0x01,0x00,0xFE,0x00,0x00,
  0x00,0x23,0xFC,0x01,0xFE,0x00,0x00,0x00,0x00,0xFF,0xF8,0x00,0x01,0xFE,0x00,0x00,
  0x00,0x23,0xFC,0x00,0xFF,0x00,0x00,0x00,0x01,0xFF,0xE0,0x00,0x01,0xFC,0x00,0x00
};



const int THERM_PIN = D5;
const int POT_PIN = A5;
int potPos;
int dispenseTime = 1000;
static unsigned int disableTimerStart = 0;
int waitTime = 1000*5;
bool detected;
bool dispense_Flag = FALSE;

const int origin = 0;

int newState;
int oldState;

int m;
int wemo_AC;
int wemo_TV;
int BULB;
bool comfort = FALSE;


unsigned int msec;
static unsigned int startTime=0;

int rotate = 60;
int stop = 191;

//myObjects
IoTTimer goodBoyTimer, displayTimer;
Servo myServo;
const int OLED_RESET =-1;
Adafruit_SSD1306 display(OLED_RESET);

//myFunctons
//void dispense(unsigned int msec);
bool detectionCheck();
SYSTEM_MODE(SEMI_AUTOMATIC);

void setup() {
  Serial.begin(9600);
  waitFor(Serial.isConnected,10000);

  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  display.clearDisplay();
  display.display();

  display.setTextSize(2);  // Power on screen
  display.setTextColor(WHITE);
  display.setCursor(0,16);
  display.printf("S-C-T-A\nby Ben_Brown");
  display.display();
  delay(2000);
  display.clearDisplay();
 
  display.clearDisplay();  // Splash_Welcome_Screen
  display.drawBitmap(origin, origin, bitmap_dntu1r,DNTU1R_BMPWIDTH,DNTU1R_BMPHEIGHT,WHITE);
  display.display();
  delay(2000);
  display.clearDisplay();
  display.display();

  pinMode(THERM_PIN,INPUT);
  pinMode(POT_PIN,OUTPUT);
  disableTimerStart = millis();
  oldState=digitalRead(THERM_PIN);

  WiFi.on();
  WiFi.clearCredentials();
  WiFi.setCredentials("IoTNetwork");
  WiFi.connect();
  while(WiFi.connecting()){
    Serial.printf("^-.-^\n");
  }
  Serial.printf("Connected!!\n \n \n");
  switchON(wemo_AC);
  switchON(wemo_TV);
  for (BULB=0;BULB<5;BULB++){
  setHue(BULB,TRUE,HueGreen,255,255);
  Serial.printf(" Hue on %i\n",BULB);
  delay(500);
  }
}
void loop() {

  ////////////////////////////////
  detected=detectionCheck(); // check sensor for signal
  if (millis() - disableTimerStart > waitTime){ // disable sensor, timing
    if (detected){
      startTime=millis(); //set time condition for future stop
      analogWrite(POT_PIN,rotate); //dispense until stopped
      dispense_Flag=TRUE;
      Serial.printf("Dispensing%i\n",dispenseTime);
      disableTimerStart=millis(); // reset disable timer
      m++; // increment m + 1 
      displayTimer.startTimer(dispenseTime);
      display.clearDisplay();  // Dispence face
      display.drawBitmap(origin, origin, bitmap_uvoy98,UVOY98_BMPWIDTH,UVOY98_BMPHEIGHT,WHITE);
      display.display();
      displayTimer.isTimerReady();
      display.clearDisplay();
      display.display();
///////////////////////////////
        if (m==1){
          goodBoyTimer.startTimer(60000*10);
          if(!comfort){
          switchON(wemo_AC);
          switchON(wemo_TV);
          comfort=TRUE;
          }
          for (BULB=0;BULB<5;BULB++){
          setHue(BULB,TRUE,HueGreen,255,255);
          delay(500);
          }
          Serial.printf("m=%i\n",m);
        }
        if((m>=2) && (m <5)){
          for (BULB=0;BULB<5;BULB++){
          setHue(BULB,TRUE,HueGreen,255,255);
          delay(500);
          }
          Serial.printf("m=%i\n",m);
        }
        if((5<m) && (m<8)){
          for (BULB=0;BULB<5;BULB++){
          setHue(BULB,TRUE,HueYellow,255,255);
          delay(500);
          }
          display.clearDisplay();  // Sus Face
          display.drawBitmap(origin, origin, bitmap_uvoy98,UQQXMF_BMPWIDTH,UQQXMF_BMPHEIGHT,WHITE);
          display.display();
          Serial.printf("m=%i\n",m);
        }
          if(m==8){
          goodBoyTimer.startTimer(((60000*10)*6)*6);
          switchOFF(wemo_AC);
          switchOFF(wemo_TV);
          comfort=FALSE;
          for (BULB=0;BULB<5;BULB++){
          setHue(BULB,TRUE,HueRed,255,255);
          delay(500);
          }    
          display.clearDisplay();  // Dead Eyes
          display.drawBitmap(origin, origin, bitmap_bp2yzj,BP2YZJ_BMPWIDTH,BP2YZJ_BMPHEIGHT,WHITE);
          display.display();
          Serial.printf("m=%i\n",m);

          analogWrite(POT_PIN,stop);
          Serial.printf("NO MORE m&m's fatso!\n      GO OUTSIDE!\n");
          // delay(4000);     
       }
    }     
          if ((millis()-startTime>dispenseTime)&&(dispense_Flag==TRUE)){ // stop dispense
          analogWrite(POT_PIN,stop);
          Serial.printf("STOP_STOP_STOP_Dispensing\n \n \n Stopped\n");
          dispense_Flag=FALSE;
    }   
    if((m==8)&&(goodBoyTimer.isTimerReady())){
      m=0;
    }
  }
}

//MY FUNCTIONS

// void dispense(unsigned int msec){
//   static bool started = FALSE;
//   static unsigned int startTime=0;

//   int rotate = 60;
//   int stop = 192;
//   if (!started){
//     startTime=millis();
//     analogWrite(potPin,rotate);
//     started = TRUE;
//   }
//   if (millis()-startTime>msec){
//      analogWrite(potPin,stop);
//      started = FALSE;
//   }
//}
  
bool detectionCheck(){
 newState=digitalRead(THERM_PIN);
    if(oldState!=newState){
      if(newState==TRUE){
    Serial.printf("DETECTED\n",newState);
    }else{
      Serial.printf("COLD\n",newState);
    }
    oldState=newState;
   
  } 
  return newState;
}



